using Microsoft.EntityFrameworkCore;
using SportifyApi.Data;
using SportifyApi.DTOs;
using SportifyApi.Interfaces;
using SportifyApi.Models;

namespace SportifyApi.Services
{
    public class AchievementService : IAchievementService
    {
        private readonly AppDbContext _context;

        public AchievementService(AppDbContext context)
        {
            _context = context;
        }

        public async Task<IEnumerable<AchievementDto>> GetAllAchievementsAsync()
        {
            return await _context.Achievements
                .Select(a => new AchievementDto
                {
                    Title = a.Title,
                    Description = a.Description,
                    IsAutoGenerated = a.IsAutoGenerated
                }).ToListAsync();
        }

        public async Task<bool> CreateAchievementAsync(AchievementDto dto)
        {
            var achievement = new Achievement
            {
                Title = dto.Title,
                Description = dto.Description,
                IsAutoGenerated = dto.IsAutoGenerated
            };

            _context.Achievements.Add(achievement);
            return await _context.SaveChangesAsync() > 0;
        }

        public async Task<bool> AssignToUserAsync(UserAchievementDto dto)
        {
            var userAchievement = new UserAchievement
            {
                UserId = dto.UserId,
                AchievementId = dto.AchievementId,
                EventId = dto.EventId,
                AwardedByAdminId = dto.AwardedByAdminId
            };

            _context.UserAchievements.Add(userAchievement);
            return await _context.SaveChangesAsync() > 0;
        }

        public async Task<IEnumerable<AchievementDto>> GetUserAchievementsAsync(int userId)
        {
            return await _context.UserAchievements
                .Where(ua => ua.UserId == userId)
                .Include(ua => ua.Achievement)
                .Select(ua => new AchievementDto
                {
                    Title = ua.Achievement.Title,
                    Description = ua.Achievement.Description,
                    IsAutoGenerated = ua.Achievement.IsAutoGenerated
                }).ToListAsync();
        }
    }
}
